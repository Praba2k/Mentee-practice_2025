
Q_2_POINTERS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  00000228  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000a  000041aa  000001aa  0000021e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .comment      00000030  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000258  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023b6  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000021b8  00000000  00000000  0000268e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000023a  00000000  00000000  00004846  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00004a80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001099  00000000  00000000  00004ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000008e  00000000  00000000  00005b81  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00005c0f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  68:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  6c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  70:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  74:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  78:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  7c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  80:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  84:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  88:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  8c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	0e 94 b0 00 	call	0x160	; 0x160 <main>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <reverse>:
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
  b0:	2a 97       	sbiw	r28, 0x0a	; 10
  b2:	cd bf       	out	0x3d, r28	; 61
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	8f 83       	std	Y+7, r24	; 0x07
  b8:	98 87       	std	Y+8, r25	; 0x08
  ba:	69 87       	std	Y+9, r22	; 0x09
  bc:	7a 87       	std	Y+10, r23	; 0x0a
  be:	19 82       	std	Y+1, r1	; 0x01
  c0:	1a 82       	std	Y+2, r1	; 0x02
  c2:	89 85       	ldd	r24, Y+9	; 0x09
  c4:	9a 85       	ldd	r25, Y+10	; 0x0a
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	8b 83       	std	Y+3, r24	; 0x03
  ca:	9c 83       	std	Y+4, r25	; 0x04
  cc:	3a c0       	rjmp	.+116    	; 0x142 <__EEPROM_REGION_LENGTH__+0x42>
  ce:	89 81       	ldd	r24, Y+1	; 0x01
  d0:	9a 81       	ldd	r25, Y+2	; 0x02
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	2f 81       	ldd	r18, Y+7	; 0x07
  d8:	38 85       	ldd	r19, Y+8	; 0x08
  da:	82 0f       	add	r24, r18
  dc:	93 1f       	adc	r25, r19
  de:	fc 01       	movw	r30, r24
  e0:	80 81       	ld	r24, Z
  e2:	91 81       	ldd	r25, Z+1	; 0x01
  e4:	8d 83       	std	Y+5, r24	; 0x05
  e6:	9e 83       	std	Y+6, r25	; 0x06
  e8:	89 81       	ldd	r24, Y+1	; 0x01
  ea:	9a 81       	ldd	r25, Y+2	; 0x02
  ec:	88 0f       	add	r24, r24
  ee:	99 1f       	adc	r25, r25
  f0:	2f 81       	ldd	r18, Y+7	; 0x07
  f2:	38 85       	ldd	r19, Y+8	; 0x08
  f4:	82 0f       	add	r24, r18
  f6:	93 1f       	adc	r25, r19
  f8:	2b 81       	ldd	r18, Y+3	; 0x03
  fa:	3c 81       	ldd	r19, Y+4	; 0x04
  fc:	22 0f       	add	r18, r18
  fe:	33 1f       	adc	r19, r19
 100:	4f 81       	ldd	r20, Y+7	; 0x07
 102:	58 85       	ldd	r21, Y+8	; 0x08
 104:	24 0f       	add	r18, r20
 106:	35 1f       	adc	r19, r21
 108:	f9 01       	movw	r30, r18
 10a:	20 81       	ld	r18, Z
 10c:	31 81       	ldd	r19, Z+1	; 0x01
 10e:	fc 01       	movw	r30, r24
 110:	20 83       	st	Z, r18
 112:	31 83       	std	Z+1, r19	; 0x01
 114:	8b 81       	ldd	r24, Y+3	; 0x03
 116:	9c 81       	ldd	r25, Y+4	; 0x04
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	2f 81       	ldd	r18, Y+7	; 0x07
 11e:	38 85       	ldd	r19, Y+8	; 0x08
 120:	82 0f       	add	r24, r18
 122:	93 1f       	adc	r25, r19
 124:	2d 81       	ldd	r18, Y+5	; 0x05
 126:	3e 81       	ldd	r19, Y+6	; 0x06
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18
 12c:	31 83       	std	Z+1, r19	; 0x01
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	9a 81       	ldd	r25, Y+2	; 0x02
 132:	01 96       	adiw	r24, 0x01	; 1
 134:	89 83       	std	Y+1, r24	; 0x01
 136:	9a 83       	std	Y+2, r25	; 0x02
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	9c 81       	ldd	r25, Y+4	; 0x04
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	8b 83       	std	Y+3, r24	; 0x03
 140:	9c 83       	std	Y+4, r25	; 0x04
 142:	29 81       	ldd	r18, Y+1	; 0x01
 144:	3a 81       	ldd	r19, Y+2	; 0x02
 146:	8b 81       	ldd	r24, Y+3	; 0x03
 148:	9c 81       	ldd	r25, Y+4	; 0x04
 14a:	28 17       	cp	r18, r24
 14c:	39 07       	cpc	r19, r25
 14e:	0c f4       	brge	.+2      	; 0x152 <__EEPROM_REGION_LENGTH__+0x52>
 150:	be cf       	rjmp	.-132    	; 0xce <reverse+0x26>
 152:	00 00       	nop
 154:	2a 96       	adiw	r28, 0x0a	; 10
 156:	cd bf       	out	0x3d, r28	; 61
 158:	de bf       	out	0x3e, r29	; 62
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	08 95       	ret

00000160 <main>:
#include "reverse.h"
int main(){
 160:	cf 93       	push	r28
 162:	df 93       	push	r29
 164:	cd b7       	in	r28, 0x3d	; 61
 166:	de b7       	in	r29, 0x3e	; 62
 168:	2c 97       	sbiw	r28, 0x0c	; 12
 16a:	cd bf       	out	0x3d, r28	; 61
 16c:	de bf       	out	0x3e, r29	; 62
	int arr[] = {1,2,3,4,5};
 16e:	8a e0       	ldi	r24, 0x0A	; 10
 170:	ea ea       	ldi	r30, 0xAA	; 170
 172:	f1 e4       	ldi	r31, 0x41	; 65
 174:	de 01       	movw	r26, r28
 176:	13 96       	adiw	r26, 0x03	; 3
 178:	01 90       	ld	r0, Z+
 17a:	0d 92       	st	X+, r0
 17c:	8a 95       	dec	r24
 17e:	e1 f7       	brne	.-8      	; 0x178 <main+0x18>
	int size = sizeof(arr)/sizeof(arr[0]);
 180:	85 e0       	ldi	r24, 0x05	; 5
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	89 83       	std	Y+1, r24	; 0x01
 186:	9a 83       	std	Y+2, r25	; 0x02
	reverse(arr,size);
 188:	29 81       	ldd	r18, Y+1	; 0x01
 18a:	3a 81       	ldd	r19, Y+2	; 0x02
 18c:	ce 01       	movw	r24, r28
 18e:	03 96       	adiw	r24, 0x03	; 3
 190:	b9 01       	movw	r22, r18
 192:	0e 94 54 00 	call	0xa8	; 0xa8 <reverse>
	return 0;
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	90 e0       	ldi	r25, 0x00	; 0
	}
 19a:	2c 96       	adiw	r28, 0x0c	; 12
 19c:	cd bf       	out	0x3d, r28	; 61
 19e:	de bf       	out	0x3e, r29	; 62
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	08 95       	ret

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
